<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uber-FX on Mortar Documentation</title>
    <link>https://go-masonry.github.io/fx/</link>
    <description>Recent content in Uber-FX on Mortar Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Dec 2020 10:35:11 +0200</lastBuildDate><atom:link href="https://go-masonry.github.io/fx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dependency Pattern</title>
      <link>https://go-masonry.github.io/fx/dependency/</link>
      <pubDate>Sat, 05 Dec 2020 13:18:51 +0200</pubDate>
      
      <guid>https://go-masonry.github.io/fx/dependency/</guid>
      <description>We are using this pattern when creating a new Uber-FX dependency, it makes it easy adding new external dependencies later when your application evolves. To explain this better we will do this with a Notifier example.
Preparation   Define our Notifier Interface. type Notifier interface{ Alert(ctx context.Context, msg string) } 
   Create a dependency &amp;ldquo;container&amp;rdquo; for all future dependencies of the Notifier implementation and embed fx.In into it.</description>
    </item>
    
    <item>
      <title>Groups</title>
      <link>https://go-masonry.github.io/fx/groups/</link>
      <pubDate>Sat, 05 Dec 2020 13:18:51 +0200</pubDate>
      
      <guid>https://go-masonry.github.io/fx/groups/</guid>
      <description>Uber-FX group is a feature that allows you to consume and produce multiple values of the same type. This make it easier to influence/configure different instances.
Mortar have different groups, but we will focus on one of them here.
Internal HTTP Handlers// InternalHTTPHandlers - Internal Http Handlers group. Mortar comes with several internal handlers, you can add yours. InternalHTTPHandlers = partial.FxGroupInternalHTTPHandlers //InternalHTTPHandlerFunctions - Internal Http Handler Functions group. Similar toInternalHttpHandlers but for functions InternalHTTPHandlerFunctions = partial.</description>
    </item>
    
    <item>
      <title>Tests</title>
      <link>https://go-masonry.github.io/fx/tests/</link>
      <pubDate>Sat, 05 Dec 2020 13:18:51 +0200</pubDate>
      
      <guid>https://go-masonry.github.io/fx/tests/</guid>
      <description>Testing with Uber-FX makes it possible to test different logic while mocking parts of the DI graph.
Constructor per Type While it&amp;rsquo;s possible to register several instances using one Constructor function, If possible avoid this.
Official Uber-FX documentation// Functions may also return multiple objects. For example, we could combine // NewHandler and NewLogger into a single function: // // func NewHandlerAndLogger() (*log.Logger, http.Handler, error) // // Fx also understands this idiom, and would treat NewHandlerAndLogger as the // constructor for both the *log.</description>
    </item>
    
  </channel>
</rss>
